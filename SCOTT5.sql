--1
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP
    GROUP BY DEPTNO, JOB
        HAVING AVG(SAL) >= 500 -- 그룹으로 묶은 행에 대해서 제약조건을 부여하려면 HAVING절을 사용
    ORDER BY DEPTNO, JOB;
--2
SELECT DEPTNO, TRUNC(AVG(SAL)) AS "평균 급여",
    MAX(SAL) AS "최고 급여",
    MIN(SAL) AS "최저 급여",
    COUNT(*) AS "사원 수"
    FROM EMP
    GROUP BY DEPTNO;
--3
SELECT JOB AS "직책", COUNT(*) AS "사원수"
    FROM EMP
    GROUP BY JOB
    HAVING COUNT(*) >= 3;
--4
SELECT TO_CHAR(HIREDATE, 'YYYY') AS "입사일",
    DEPTNO,
    COUNT(*) AS "사원수"
    FROM EMP
    GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO;
--5
SELECT NVL2(COMM, 'O', 'X') AS "추가수당",
    COUNT(*) AS "사원수"
    FROM EMP
    GROUP BY NVL2(COMM, 'O', 'X');
SELECT DEPTNO,
    TO_CHAR(HIREDATE, 'YYYY') AS "입사년도",
    COUNT(*) AS "사원수",
    MAX(SAL) AS "최고급여",
    TRUNC(AVG(SAL)) AS "평균급여",
    SUM(SAL) AS "합계"
    FROM EMP
    GROUP BY DEPTNO, TO_CHAR(HIREDATE, 'YYYY')
    ORDER BY DEPTNO;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
    FROM EMP
    GROUP BY ROLLUP(DEPTNO, JOB);

SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 10
UNION ALL
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE ENAME = 'FORD';

-- INTERSECT : 교집합 : 두개의 쿼리문에 모두 포함되어 있는 데이터를 표시    
SELECT EMPNO, ENAME, SAL
    FROM EMP
    WHERE SAL > 1000
INTERSECT
SELECT EMPNO, ENAME, SAL
    FROM EMP
    WHERE SAL < 2000;
    
SELECT EMPNO, ENAME, SAL
    FROM EMP
    WHERE SAL > 1000;
MINUS
SELECT EMPNO, ENAME, SAL
    FROM EMP
    WHERE SAL > 2000;

-- JOIN은 두 개 이상의 테이블에서 데이터를 가져와서 연결하는데 사용되는 SQL의 기능
-- 테이블의 식별 값인 PRIMARY KEY와 테이블 간 공통 값인 FOREIGN KEY 값을 사용하여 조인
-- INNER JOIN : 왼쪽 테이블의 모든 데이터와 오른쪽 데이터에서 일치하는 데이터를 선택
-- RIGHT JOIN : 오른쪽 테이블의 모든 데이터와 왼족 테이블에서 일치하는 데이터 선택

-- 두개의 테이블의 모든 열의
SELECT * 
    FROM EMP , DEPT
    ORDER BY EMPNO;    
    
SELECT *
    FROM EMP, DEPT;

SELECT *
    FROM EMP, DEPT
    WHERE EMP.DEPTNO = DEPT.DEPTNO

/* 테이블의 별칭 주기 : 양족 테이블 모두에 존재하는 열에 대해서는 테이블 이름을 명시해야 함
SELECT EMPNO, ENAME, JOB, D.DEPTNO, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO;
    
/* 등가 조인(equi join) */
-- 테이블을 연결한 후에 출력 행을 각 테이블의 특정 열에 일치한 데이터를 기준으로 선정하는 방식
-- ANSI 조인 방식으로 연결하기
-- 오라클9i 까지는 오라클 조인만 사용 할 수 있었으나, 오라클 10g부터는 ANSI 조인을 추가로 사용 가능

SELECT EMPNO, ENAME, E.DEPTNO DNAME
    FROM EMP E JOIN DEPT D
    ON E.DEPTNO = D.DEPTNO
    WHERE E.JOB = 'MANAGER';
    
--EMP와 DEPT테이블을 조인하고 급여가 3000이상인 사원 정보 출력(사원번호, 이름, 급여, 입사일, 부서번호, 부서이름)
--오라클 방식과 ANSI 방식으로

SELECT EMPNO, ENAME, SAL, HIREDATE, D.DEPTNO, DNAME
 FROM EMP E JOIN DEPT D
 ON E.DEPTNO = D.DEPTNO
 WHERE SAL >= 3000;
 /* EMP 테이블 별칭을 E로, DEPT 테이블 별칭은 D로 하여 다음과 같이 등가 조인을 했을때, 
 급여가 2500 이하고 사원번호가 9999 이하인 사원의 정보가 출력되도록 작성 : 

오라클 방식, ANSI 방식으로 *
SELECT EMPNO, ENAME, SAL, HIREDATE, D.DEPTNO, DNAME 
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE SAL BETWEEN 2500 AND 9999;

SELECT EMPNO, ENAME, SAL, HIREDATE, D.DEPTNO, DNAME
    FROM EMP E JOIN DEPT D
    ON E.DEPTNO = D.DEPTNO
    WHERE SAL BETWEEN 2500 AND 9999;
    
    
/* 급여에 대한 등급을 표시하기위해서는 급여의 금액이 일치 할 수 없으므로 최소와 최대 급여를 사이에 있어야함
이런경우 BETWEEN A AND B 연산자를 사용하면 처리 가능*/
SELECT ENAME, SAL, GRADE
    FROM EMP E JOIN SALGRADE S
    ON SAL BETWEEN LOSAL AND HISAL;

-1-
SELECT ENAME, HIREDATE, DEPTNO
FROM EMP
WHERE EMPNO = 7499;

-2-
SELECT * 
FROM EMP
WHERE ENAME = 'ALLEN';

-3-
SELECT *
FROM EMP
WHERE ENAME > 'K';

4
SELECT ENAME, SAL, DEPTNO, HIREDATE
FROM EMP
WHERE HIREDATE > '81/4/2' AND HIREDATE < '82/12/09';

-5-
SELECT ENAME, JOB, SAL
FROM EMP
WHERE SAL > 1600 AND SAL < 3000;

6
SELECT *
FROM EMP
WHERE EXTRACT(YEAR FROM HIREDATE) != 1981;

-7-
SELECT *
FROM EMP
WHERE JOB IN ('MANAGER' , 'SALESMAN');

-8-
SELECT * 
FROM EMP
WHERE DEPTNO NOT IN (20,30);

-9-
SELECT EMPNO, ENAME, DEPTNO
FROM EMP
WHERE ENAME LIKE('S%%');

-10-
SELECT EMPNO, ENAME, DEPTNO
FROM EMP
WHERE ENAME LIKE('_A%');

-11
SELECT *
FROM EMP
WHERE COMM IS NOT NULL;

-12-
SELECT *
FROM EMP
WHERE ENAME LIKE('J___S');

-13
SELECT *
FROM EMP
WHERE SAL > 1500 AND EMPNO = 30;

-14
SELECT ENAME, SAL, NVL(COMM,0), SAL+NVL(COMM,0) AS "총액"
FROM EMP
ORDER BY "총액" DESC;

-15-
SELECT ENAME, SAL, SAL*1.13, DEPTNO
FROM EMP
WHERE DEPTNO IN 10; 

-16
SELECT ENAME, HIREDATE, NEXT_DAY(HIREDATE+60, '월요일') DDAY
FROM EMP;

-17
SELECT LOWER(SUBSTR(ENAME,1,3))"소문자출력"
FROM EMP
WHERE LENGTH(ENAME) >= 6;

-18
SELECT EMPNO, SAL, NVL(COMM, 0) "커미션", SAL*12+NVL(COMM, 0)"연봉"
FROM EMP
ORDER BY "연봉" DESC;

-19
SELECT TO_CHAR(HIREDATE, 'YYYY"년"MM"월"DD"일"') AS 입사일
FROM EMP;

-20-
SELECT ROUND(AVG(SAL),2), MAX(SAL), MIN(SAL), COUNT(*)
FROM EMP
WHERE DEPTNO IN 10;

-21
SELECT *
FROM EMP
WHERE MOD(EMPNO, 2) = 0;

-22
SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

-23
SELECT ENAME,SAL,D.DEPTNO,DNAME,
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;

-24
SELECT D.DEPTNO, DNAME, ENAME, SAL
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE ENAME = 'ALLEN';

SELECT D.DEPTNO, DNAME, ENAME, SAL
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE JOB = "ALLEN 과 직무가 같은 사람"

SELECT D.DEPTNO, DNAME, ENAME, SAL
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE JOB = (SELECT JOB
            FROM EMP
            WHERE ENAME = 'ALLEN');

SELECT EMPNO, ENAME
    FROM EMP
    WHERE SAL > "전체 사원의 평균급여";
    
SELECT  DEPTNO, ROUND(AVG(SAL))
    FROM EMP
    GROUP BY DEPTNO
        HAVING AVG(SAL) < 2000;
        
SELECT E1.EMPNO, E1.ENAME, E1.MGR
        E2.EMPNO AS MGR_EMPNO,
        E2.EMPNO AS MGR_ENAME
        FROM EMP E1 JOIN EMP E2
        ON E1.MGR = E2.EMPNO;
/*외부조인(OUTER JOIN) : 내부조인(INNER JOIN) 또는 동등 조인의 경우 한쪽의 컬럼(열)에 값이 없다면 조회 되지않음

--ANSI 문법
SELECT ENAME, E.DEPTNO, DNAME
    FROM EMP e RIGHT OUTER JOIN DEPT d
    ON E.DEPTNO = D.DEPTNO
    ORDER BY E.DEPTNO;
--오라클 문법  
SELECT ENAME, E.DEPTNO, DNAME
    FROM EMP e LEFT OUTER JOIN DEPT d
    ON E.DEPTNO = D.DEPTNO
    ORDER BY E.DEPTNO;